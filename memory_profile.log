Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     50.0 MiB     50.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     52.0 MiB      2.0 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     53.8 MiB      1.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     53.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     53.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     51.9 MiB     51.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     51.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     52.2 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     53.3 MiB      1.1 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     53.9 MiB      0.6 MiB           1           r_img = function(r_img, *f_args)
   124     54.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     53.6 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     53.6 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     53.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     53.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     53.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.3 MiB     58.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.1 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.1 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     70.1 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     70.1 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     66.9 MiB     66.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     66.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     66.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     67.3 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     67.9 MiB      0.6 MiB           1           r_img = function(r_img, *f_args)
   124     67.1 MiB     -0.7 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.2 MiB     -7.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.3 MiB     58.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.1 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.1 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     70.1 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     70.1 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     66.9 MiB     66.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     66.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     67.2 MiB      0.2 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     67.6 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     67.1 MiB     -0.5 MiB           1           r_img = function(r_img, *f_args)
   124     67.2 MiB      0.1 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.3 MiB     -7.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.3 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.3 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.3 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.3 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.4 MiB     58.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.2 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.2 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.2 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.1 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.5 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.0 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.8 MiB     -0.2 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.4 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.4 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.4 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.4 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.4 MiB     58.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.3 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.2 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.2 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.2 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.1 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.6 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.0 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.4 MiB     -0.6 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.4 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.4 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.4 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.4 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.4 MiB     58.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.3 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.2 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.2 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.2 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.1 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.5 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.0 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.4 MiB     -0.6 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.4 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.4 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.4 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.4 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.5 MiB     58.5 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.3 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.4 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.2 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.7 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.1 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.1 MiB      0.1 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.5 MiB     -0.6 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.5 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.5 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.5 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.5 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.5 MiB     58.5 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.4 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.3 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.3 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.3 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.1 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.2 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.6 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.1 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.1 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.9 MiB     -0.2 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.5 MiB     -0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.5 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.5 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.5 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.6 MiB     58.6 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.4 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.4 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.2 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.7 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.1 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.2 MiB      0.1 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.5 MiB     -0.7 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.5 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.5 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.5 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.5 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.6 MiB     58.6 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.4 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.4 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.2 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.7 MiB      0.4 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.1 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.1 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.9 MiB     -0.2 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.5 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.5 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.5 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.5 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.6 MiB     58.6 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.3 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.3 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     70.3 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     70.3 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.2 MiB      0.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.7 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.1 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.1 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.7 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.7 MiB     58.7 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.6 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.5 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.5 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.3 MiB     59.3 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.3 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.3 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.8 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.2 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.8 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.8 MiB     58.8 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.6 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.6 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.4 MiB     59.4 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.4 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.5 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.8 MiB      0.3 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.3 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.3 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.9 MiB     58.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.7 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.7 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.4 MiB     59.4 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.4 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.5 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     59.8 MiB      0.3 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.3 MiB      0.5 MiB           1           r_img = function(r_img, *f_args)
   124     60.3 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.9 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.9 MiB     58.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.7 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.7 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.5 MiB     59.5 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.5 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.2 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.3 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.9 MiB     58.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.7 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.7 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.5 MiB     59.5 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.5 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     59.9 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.9 MiB     58.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.7 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.7 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.5 MiB     59.5 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.5 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.3 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     58.9 MiB     58.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.5 MiB     59.5 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.5 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.3 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.6 MiB     59.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.3 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.6 MiB     59.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.8 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.4 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.6 MiB     59.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.9 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.4 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     59.9 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     59.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     59.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     59.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.6 MiB     59.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.9 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.3 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.7 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.4 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.0 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.0 MiB     59.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.8 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.6 MiB     59.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.9 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.4 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.8 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.4 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.0 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.4 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.8 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.5 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.0 MiB     -0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     59.9 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.4 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.8 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.5 MiB     -0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.0 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.5 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.0 MiB     -0.4 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.0 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.8 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.0 MiB     -0.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     60.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     70.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     70.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.7 MiB      1.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     68.7 MiB     -2.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     68.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     62.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     62.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     62.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.1 MiB     59.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     70.9 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     70.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     70.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.7 MiB     59.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     68.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.0 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.1 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.1 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.1 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.1 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     69.0 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     71.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     71.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     71.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.6 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     61.0 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     61.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.6 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     61.0 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     61.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.6 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     61.0 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     61.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.1 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     69.0 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB     -5.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     60.9 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     60.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     59.2 MiB     59.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     61.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     63.0 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     63.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97     63.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116     59.8 MiB     59.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118     59.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120     60.1 MiB      0.3 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121     60.5 MiB      0.5 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123     61.0 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124     61.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126     60.2 MiB     -0.8 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127     60.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129     60.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130     60.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134     60.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90     57.9 MiB     57.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92     59.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93     61.7 MiB      2.0 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95     61.7 MiB      0.0 MiB           1           if processor == GPU: 
    96    121.9 MiB     60.2 MiB           1               screen = cv2.UMat(screen)
    97    121.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    120.1 MiB    120.1 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    120.1 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    121.2 MiB      1.1 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    121.4 MiB      0.3 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    122.1 MiB      0.6 MiB           1           r_img = function(r_img, *f_args)
   124    122.1 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    122.3 MiB      0.2 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    122.3 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    122.3 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    122.3 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    122.3 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    124.9 MiB    124.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    126.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.6 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.1 MiB    125.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB    -10.7 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    131.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    131.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    131.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    131.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    133.1 MiB    133.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB     -7.9 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    131.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    131.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    131.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    131.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    133.1 MiB    133.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB     -7.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    131.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    131.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    131.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    131.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    133.1 MiB    133.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB     -7.9 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    131.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    131.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    131.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    131.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    133.1 MiB    133.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    131.7 MiB    131.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    131.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    131.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    131.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    131.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    131.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    131.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    131.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    131.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    131.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    131.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.8 MiB    123.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.2 MiB    125.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.9 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.0 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.0 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    134.7 MiB     -0.3 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    134.7 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -9.0 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.0 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.0 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    136.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    136.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    133.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    133.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    123.9 MiB    123.9 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    123.9 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    123.9 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    123.9 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    123.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    123.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    123.9 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    123.9 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    123.9 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    123.9 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    123.9 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.7 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.7 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.1 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    133.7 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    127.2 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    127.2 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -1.4 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.1 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.5 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.5 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.1 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    133.7 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    127.2 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    127.2 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -1.4 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.8 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.3 MiB    125.3 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.1 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    127.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    125.4 MiB    125.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    135.2 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    128.6 MiB     -6.5 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    128.6 MiB      0.0 MiB           1           if processor == GPU: 
    96    125.9 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    125.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    124.0 MiB    124.0 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    124.0 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    124.0 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    124.0 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    124.0 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    124.0 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    124.0 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    124.0 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    124.0 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    124.0 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    124.0 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.0 MiB    127.0 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    128.8 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.2 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.2 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.6 MiB    125.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.6 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.6 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.6 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.6 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.6 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.6 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.6 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.6 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.6 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.1 MiB    127.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    128.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.3 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.3 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.5 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.7 MiB    125.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.1 MiB    127.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    128.9 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.8 MiB    125.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.1 MiB    127.1 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      2.1 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.4 MiB      1.2 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.8 MiB    125.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.2 MiB    127.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.0 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.8 MiB    125.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.2 MiB    127.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    133.2 MiB      6.1 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.4 MiB     -2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.4 MiB      0.0 MiB           1           if processor == GPU: 
    96    127.6 MiB     -2.8 MiB           1               screen = cv2.UMat(screen)
    97    127.6 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    125.8 MiB    125.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    125.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    125.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    125.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    125.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    125.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    125.8 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    125.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    125.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    125.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    125.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.2 MiB    127.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    131.2 MiB      4.1 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    130.4 MiB     -0.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    130.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    130.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.5 MiB    128.5 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.5 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.5 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.5 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.7 MiB      0.2 MiB           1           r_img = function(r_img, *f_args)
   124    128.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.2 MiB      0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.2 MiB    127.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    134.7 MiB      7.5 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    131.8 MiB     -2.9 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    131.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    131.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.6 MiB    128.6 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.6 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.8 MiB      0.1 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    128.8 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    128.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    128.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    128.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    130.6 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    128.8 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.2 MiB      0.4 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    128.8 MiB      0.1 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    128.8 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    128.8 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    128.8 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    130.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.1 MiB           1           r_img = function(r_img, *f_args)
   124    128.9 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.2 MiB      0.3 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    137.1 MiB      9.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    139.9 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    137.5 MiB     -2.4 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    137.5 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    131.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    129.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    129.2 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    129.2 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.2 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.8 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.2 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    128.9 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.4 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    131.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    129.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    129.2 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    129.2 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.2 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    128.8 MiB     -0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.5 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    131.1 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.4 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    129.2 MiB    129.2 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    129.2 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    129.2 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    129.2 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.2 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.2 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.2 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.2 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.2 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.2 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.3 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.2 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.7 MiB      0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    129.7 MiB    129.7 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    139.4 MiB      9.7 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    140.8 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    140.8 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    140.8 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    129.7 MiB    129.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    129.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    129.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    129.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    129.7 MiB    129.7 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    131.5 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.9 MiB      1.4 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.9 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.9 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    129.7 MiB    129.7 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    129.7 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    129.7 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    129.7 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.7 MiB      0.0 MiB           1           r_img = function(r_img, *f_args)
   124    129.7 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.7 MiB      0.0 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.4 MiB    127.4 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.3 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.0 MiB      2.8 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.0 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.0 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
   116    128.8 MiB    128.8 MiB           1       @profile(stream=fp)
   117                                             def process_img_with_function(self, o_img, function, f_args):
   118    128.8 MiB      0.0 MiB           1           mixed_img = o_img
   119                                         
   120    128.8 MiB      0.0 MiB           1           r_img = cv2.inRange(o_img, RED_LOW, RED_HIGH)
   121    128.8 MiB      0.0 MiB           1           gray_img = cv2.cvtColor(o_img, cv2.COLOR_BGR2GRAY)
   122                                         
   123    129.2 MiB      0.4 MiB           1           r_img = function(r_img, *f_args)
   124    129.2 MiB      0.0 MiB           1           gray_img = function(gray_img,  *f_args)
   125                                         
   126    129.7 MiB      0.5 MiB           1           lines = cv2.HoughLinesP(gray_img, 1, np.pi/180, 200, np.array([]), 10, 5)
   127    129.7 MiB      0.0 MiB           1           lines2 = cv2.HoughLinesP(r_img, 1, np.pi/180, 100, np.array([]), 10, 5)
   128                                         
   129    129.7 MiB      0.0 MiB           1           self.drawLines(gray_img, lines2)
   130    129.7 MiB      0.0 MiB           1           self.drawLines(r_img, lines2)
   131                                                 #self.drawLines(mixed_img, lines)
   132                                                 #self.drawLines(mixed_img,lines2)
   133                                         
   134    129.7 MiB      0.0 MiB           1           return gray_img, mixed_img, r_img


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
    90    127.9 MiB    127.9 MiB           1       @profile(stream=fp)
    91                                             def prepare_image(self, processor): 
    92    129.7 MiB      1.8 MiB           1           screen_matrix = ImageGrab.grab(bbox=(0,60,960,560))
    93    132.4 MiB      2.6 MiB           1           screen = np.array(screen_matrix)
    94                                         
    95    132.4 MiB      0.0 MiB           1           if processor == GPU: 
    96                                                     screen = cv2.UMat(screen)
    97    132.4 MiB      0.0 MiB           1           return screen


Filename: D:\Projekty\MC-DRL/src\imageProcessing.py

Line #    Mem usage    Increment  Occurences   Line Contents
============================================================
